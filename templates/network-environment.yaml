#This file is an example of an environment file for defining the isolated
#networks and related parameters.
resource_registry:
  # Network Interface templates to use (these files must exist). You can
  # override these by including one of the net-*.yaml environment files,
  # such as net-bond-with-vlans.yaml, or modifying the list here.
  # Port assignments for the Controller
  OS::TripleO::Controller::Net::SoftwareConfig:
    /home/stack/templates/nic-configs/controller.yaml
  # Port assignments for the Compute
  OS::TripleO::Compute::Net::SoftwareConfig:
    /home/stack/templates/nic-configs/compute.yaml

parameter_defaults:
  # This section is where deployment-specific configuration is done
  #
  # NOTE: (Since Rocky)
  # ControlPlaneSubnetCidr: It is no longer a requirement to provide the
  #                         parameter. The attribute is resolved from the
  #                         ctlplane subnet(s).
  # ControlPlaneDefaultRoute: It is no longer a requirement to provide this
  #                           parameter. The attribute is resolved from the
  #                           ctlplane subnet(s).
  # EC2MetadataIp: It is no longer a requirement to provide this parameter. The
  #                attribute is resolved from the ctlplane subnet(s).
  #

  # Customize the IP subnet to match the local environment
  StorageNetCidr: '192.168.102.0/24'
  # Customize the IP range to use for static IPs and VIPs
  StorageAllocationPools: [{'start': '192.168.102.40', 'end': '192.168.102.250'}]
  # Customize the VLAN ID to match the local environment
  StorageNetworkVlanID: 902

  # Customize the IP subnet to match the local environment
  StorageMgmtNetCidr: '192.168.103.0/24'
  # Customize the IP range to use for static IPs and VIPs
  StorageMgmtAllocationPools: [{'start': '192.168.103.40', 'end': '192.168.103.250'}]
  # Customize the VLAN ID to match the local environment
  StorageMgmtNetworkVlanID: 903

  # Customize the IP subnet to match the local environment
  InternalApiNetCidr: '192.168.100.0/24'
  # Customize the IP range to use for static IPs and VIPs
  InternalApiAllocationPools: [{'start': '192.168.100.40', 'end': '192.168.100.250'}]
  # Customize the VLAN ID to match the local environment
  InternalApiNetworkVlanID: 900

  # Customize the IP subnet to match the local environment
  TenantNetCidr: '192.168.101.0/24'
  # Customize the IP range to use for static IPs and VIPs
  TenantAllocationPools: [{'start': '192.168.101.40', 'end': '192.168.101.250'}]
  # Customize the VLAN ID to match the local environment
  TenantNetworkVlanID: 901

  # Customize the IP subnet to match the local environment
  ExternalNetCidr: '192.168.0.0/23'
  # Customize the IP range to use for static IPs and VIPs
  # Leave room if the external network is also used for floating IPs
  ExternalAllocationPools: [{'start': '192.168.1.41', 'end': '192.168.1.69'}]
  # Gateway router for routable networks
  ExternalInterfaceDefaultRoute: '192.168.0.1'
  # Customize the VLAN ID to match the local environment
  ExternalNetworkVlanID: 1

  PublicVirtualFixedIPs: [{'ip_address':'192.168.1.40'}]

  # Define the DNS servers (maximum 2) for the overcloud nodes
  # When the list is no set or empty, the nameservers on the ctlplane subnets will be used.
  # (ctlplane subnets nameservers are controlled by the ``undercloud_nameservers`` option in ``undercloud.conf``)
  DnsServers: ['192.168.0.4']
  # List of Neutron network types for tenant networks (will be used in order)
  NeutronNetworkType: 'vxlan,vlan'
  # The tunnel type for the tenant network (vxlan or gre). Set to '' to disable tunneling.
  NeutronTunnelTypes: 'vxlan'
  NeutronFlatNetworks: 'datacentre,prov'
  NeutronBridgeMappings: 'datacentre:br-ex,prov:br-prov'
  # Neutron VLAN ranges per network, for example 'datacentre:1:499,tenant:500:1000':
  NeutronNetworkVLANRanges: 'datacentre:1:4000,prov:1:4000'
  NeutronGlobalPhysnetMtu: 8946
  NeutronEnableIsolatedMetadata: true
  # Customize bonding options, e.g. "mode=4 lacp_rate=1 updelay=1000 miimon=100"
  # for Linux bonds w/LACP, or "bond_mode=active-backup" for OVS active/backup.
  #BondInterfaceOvsOptions: "bond_mode=active-backup"
  BondInterfaceOvsOptions: "mode=4 lacp_rate=1 updelay=1000 miimon=100"
